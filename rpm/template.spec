%bcond_without tests
%bcond_without weak_deps

%global __os_install_post %(echo '%{__os_install_post}' | sed -e 's!/usr/lib[^[:space:]]*/brp-python-bytecompile[[:space:]].*$!!g')
%global __provides_exclude_from ^/opt/ros/jazzy/.*$
%global __requires_exclude_from ^/opt/ros/jazzy/.*$

%global __cmake_in_source_build 1

Name:           ros-jazzy-orbbec-camera
Version:        1.5.14
Release:        1%{?dist}%{?release_suffix}
Summary:        ROS orbbec_camera package

License:        Apache-2.0
Source0:        %{name}-%{version}.tar.gz

Requires:       elfutils-devel
Requires:       gflags-devel
Requires:       glog-devel
Requires:       json-devel
Requires:       mesa-libGL-devel
Requires:       mesa-libGLU-devel
Requires:       ros-jazzy-ament-index-cpp
Requires:       ros-jazzy-ament-lint-auto
Requires:       ros-jazzy-ament-lint-common
Requires:       ros-jazzy-backward-ros
Requires:       ros-jazzy-builtin-interfaces
Requires:       ros-jazzy-camera-info-manager
Requires:       ros-jazzy-cv-bridge
Requires:       ros-jazzy-diagnostic-msgs
Requires:       ros-jazzy-diagnostic-updater
Requires:       ros-jazzy-image-publisher
Requires:       ros-jazzy-image-transport
Requires:       ros-jazzy-orbbec-camera-msgs
Requires:       ros-jazzy-rclcpp
Requires:       ros-jazzy-rclcpp-components
Requires:       ros-jazzy-sensor-msgs
Requires:       ros-jazzy-statistics-msgs
Requires:       ros-jazzy-std-msgs
Requires:       ros-jazzy-std-srvs
Requires:       ros-jazzy-tf2
Requires:       ros-jazzy-tf2-eigen
Requires:       ros-jazzy-tf2-msgs
Requires:       ros-jazzy-tf2-ros
Requires:       ros-jazzy-tf2-sensor-msgs
Requires:       ros-jazzy-ros-workspace
BuildRequires:  elfutils-devel
BuildRequires:  gflags-devel
BuildRequires:  glog-devel
BuildRequires:  json-devel
BuildRequires:  mesa-libGL-devel
BuildRequires:  mesa-libGLU-devel
BuildRequires:  ros-jazzy-ament-cmake
BuildRequires:  ros-jazzy-ament-index-cpp
BuildRequires:  ros-jazzy-ament-lint-auto
BuildRequires:  ros-jazzy-ament-lint-common
BuildRequires:  ros-jazzy-backward-ros
BuildRequires:  ros-jazzy-builtin-interfaces
BuildRequires:  ros-jazzy-camera-info-manager
BuildRequires:  ros-jazzy-cv-bridge
BuildRequires:  ros-jazzy-diagnostic-msgs
BuildRequires:  ros-jazzy-diagnostic-updater
BuildRequires:  ros-jazzy-image-publisher
BuildRequires:  ros-jazzy-image-transport
BuildRequires:  ros-jazzy-orbbec-camera-msgs
BuildRequires:  ros-jazzy-rclcpp
BuildRequires:  ros-jazzy-rclcpp-components
BuildRequires:  ros-jazzy-sensor-msgs
BuildRequires:  ros-jazzy-statistics-msgs
BuildRequires:  ros-jazzy-std-msgs
BuildRequires:  ros-jazzy-std-srvs
BuildRequires:  ros-jazzy-tf2
BuildRequires:  ros-jazzy-tf2-eigen
BuildRequires:  ros-jazzy-tf2-msgs
BuildRequires:  ros-jazzy-tf2-ros
BuildRequires:  ros-jazzy-tf2-sensor-msgs
BuildRequires:  ros-jazzy-ros-workspace
Provides:       %{name}-devel = %{version}-%{release}
Provides:       %{name}-doc = %{version}-%{release}
Provides:       %{name}-runtime = %{version}-%{release}

%description
Orbbec Camera package

%prep
%autosetup -p1

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/jazzy/setup.sh" ]; then . "/opt/ros/jazzy/setup.sh"; fi
mkdir -p .obj-%{_target_platform} && cd .obj-%{_target_platform}
%cmake3 \
    -UINCLUDE_INSTALL_DIR \
    -ULIB_INSTALL_DIR \
    -USYSCONF_INSTALL_DIR \
    -USHARE_INSTALL_PREFIX \
    -ULIB_SUFFIX \
    -DCMAKE_INSTALL_PREFIX="/opt/ros/jazzy" \
    -DAMENT_PREFIX_PATH="/opt/ros/jazzy" \
    -DCMAKE_PREFIX_PATH="/opt/ros/jazzy" \
    -DSETUPTOOLS_DEB_LAYOUT=OFF \
%if !0%{?with_tests}
    -DBUILD_TESTING=OFF \
%endif
    ..

%make_build

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/jazzy/setup.sh" ]; then . "/opt/ros/jazzy/setup.sh"; fi
%make_install -C .obj-%{_target_platform}

%if 0%{?with_tests}
%check
# Look for a Makefile target with a name indicating that it runs tests
TEST_TARGET=$(%__make -qp -C .obj-%{_target_platform} | sed "s/^\(test\|check\):.*/\\1/;t f;d;:f;q0")
if [ -n "$TEST_TARGET" ]; then
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/jazzy/setup.sh" ]; then . "/opt/ros/jazzy/setup.sh"; fi
CTEST_OUTPUT_ON_FAILURE=1 \
    %make_build -C .obj-%{_target_platform} $TEST_TARGET || echo "RPM TESTS FAILED"
else echo "RPM TESTS SKIPPED"; fi
%endif

%files
/opt/ros/jazzy

%changelog
* Sat Oct 11 2025 Joe Dong <mocun@orbbec.com> - 1.5.14-1
- Autogenerated by Bloom

